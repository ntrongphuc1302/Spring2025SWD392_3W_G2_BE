// <auto-generated />
using System;
using MetroOne.DAL;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace MetroOne.DAL.Migrations
{
    [DbContext(typeof(MetroonedbContext))]
    partial class MetroonedbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("MetroOne.DAL.Models.Pass", b =>
                {
                    b.Property<int>("PassId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("PassID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PassId"));

                    b.Property<DateOnly?>("EndDate")
                        .HasColumnType("date");

                    b.Property<string>("PassType")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<decimal?>("Price")
                        .HasColumnType("decimal(10, 2)");

                    b.Property<int?>("RemainingUses")
                        .HasColumnType("int");

                    b.Property<DateOnly?>("StartDate")
                        .HasColumnType("date");

                    b.Property<int>("UserId")
                        .HasColumnType("int")
                        .HasColumnName("UserID");

                    b.HasKey("PassId")
                        .HasName("PK__Passes__C6740948D56535F2");

                    b.HasIndex("UserId");

                    b.ToTable("Passes");
                });

            modelBuilder.Entity("MetroOne.DAL.Models.PaymentStatus", b =>
                {
                    b.Property<int>("PaymentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("PaymentID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PaymentId"));

                    b.Property<decimal?>("Amount")
                        .HasColumnType("decimal(10, 2)");

                    b.Property<string>("PaymentMethod")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("PaymentStatus1")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("PaymentStatus");

                    b.Property<DateTime?>("PaymentTime")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<int>("TicketId")
                        .HasColumnType("int")
                        .HasColumnName("TicketID");

                    b.HasKey("PaymentId")
                        .HasName("PK__PaymentS__9B556A585DC4EE80");

                    b.HasIndex(new[] { "TicketId" }, "UQ__PaymentS__712CC62662DA0492")
                        .IsUnique();

                    b.ToTable("PaymentStatus", (string)null);
                });

            modelBuilder.Entity("MetroOne.DAL.Models.Station", b =>
                {
                    b.Property<int>("StationId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("StationID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("StationId"));

                    b.Property<string>("Location")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<int?>("OrderInRoute")
                        .HasColumnType("int");

                    b.Property<string>("StationCode")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("StationName")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("StationId")
                        .HasName("PK__Stations__E0D8A6DDFD19AA1E");

                    b.ToTable("Stations");
                });

            modelBuilder.Entity("MetroOne.DAL.Models.Ticket", b =>
                {
                    b.Property<int>("TicketId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("TicketID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("TicketId"));

                    b.Property<DateTime?>("BookingTime")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<int>("EndStationId")
                        .HasColumnType("int")
                        .HasColumnName("EndStationID");

                    b.Property<decimal?>("Price")
                        .HasColumnType("decimal(10, 2)");

                    b.Property<string>("Qrcode")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("QRCode");

                    b.Property<int>("StartStationId")
                        .HasColumnType("int")
                        .HasColumnName("StartStationID");

                    b.Property<string>("Status")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("TripId")
                        .HasColumnType("int")
                        .HasColumnName("TripID");

                    b.Property<int>("UserId")
                        .HasColumnType("int")
                        .HasColumnName("UserID");

                    b.HasKey("TicketId")
                        .HasName("PK__Tickets__712CC627BFE3C37A");

                    b.HasIndex("EndStationId");

                    b.HasIndex("StartStationId");

                    b.HasIndex("TripId");

                    b.HasIndex("UserId");

                    b.ToTable("Tickets");
                });

            modelBuilder.Entity("MetroOne.DAL.Models.Train", b =>
                {
                    b.Property<int>("TrainId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("TrainID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("TrainId"));

                    b.Property<int>("Capacity")
                        .HasColumnType("int")
                        .HasColumnName("Capacity");

                    b.Property<int>("EndStationId")
                        .HasColumnType("int")
                        .HasColumnName("EndStationID");

                    b.Property<TimeOnly?>("EstimatedTime")
                        .HasColumnType("time");

                    b.Property<int>("StartStationId")
                        .HasColumnType("int")
                        .HasColumnName("StartStationID");

                    b.Property<string>("TrainName")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("TrainId")
                        .HasName("PK__Train__8ED2725A69305F0E");

                    b.HasIndex("EndStationId");

                    b.HasIndex("StartStationId");

                    b.ToTable("Train", (string)null);
                });

            modelBuilder.Entity("MetroOne.DAL.Models.Trip", b =>
                {
                    b.Property<int>("TripId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("TripID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("TripId"));

                    b.Property<DateTime?>("ArrivalTime")
                        .HasColumnType("datetime");

                    b.Property<string>("CoachNumber")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<DateTime?>("DepartureTime")
                        .HasColumnType("datetime");

                    b.Property<string>("TrainCode")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<int>("TrainId")
                        .HasColumnType("int")
                        .HasColumnName("TrainID");

                    b.HasKey("TripId")
                        .HasName("PK__Trips__51DC711EA65A7046");

                    b.HasIndex("TrainId");

                    b.ToTable("Trips");
                });

            modelBuilder.Entity("MetroOne.DAL.Models.User", b =>
                {
                    b.Property<int>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("UserID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("UserId"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("Role")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Status")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasDefaultValueSql("('Active')");

                    b.HasKey("UserId")
                        .HasName("PK__Users__1788CCAC603571B7");

                    b.HasIndex(new[] { "Email" }, "UQ__Users__A9D105345F5E05B1")
                        .IsUnique();

                    b.ToTable("Users");
                });

            modelBuilder.Entity("MetroOne.DAL.Models.Pass", b =>
                {
                    b.HasOne("MetroOne.DAL.Models.User", "User")
                        .WithMany("Passes")
                        .HasForeignKey("UserId")
                        .IsRequired()
                        .HasConstraintName("FK__Passes__UserID__3A81B327");

                    b.Navigation("User");
                });

            modelBuilder.Entity("MetroOne.DAL.Models.PaymentStatus", b =>
                {
                    b.HasOne("MetroOne.DAL.Models.Ticket", "Ticket")
                        .WithOne("PaymentStatus")
                        .HasForeignKey("MetroOne.DAL.Models.PaymentStatus", "TicketId")
                        .IsRequired()
                        .HasConstraintName("FK__PaymentSt__Ticke__4E88ABD4");

                    b.Navigation("Ticket");
                });

            modelBuilder.Entity("MetroOne.DAL.Models.Ticket", b =>
                {
                    b.HasOne("MetroOne.DAL.Models.Station", "EndStation")
                        .WithMany("TicketEndStations")
                        .HasForeignKey("EndStationId")
                        .IsRequired()
                        .HasConstraintName("FK__Tickets__EndStat__49C3F6B7");

                    b.HasOne("MetroOne.DAL.Models.Station", "StartStation")
                        .WithMany("TicketStartStations")
                        .HasForeignKey("StartStationId")
                        .IsRequired()
                        .HasConstraintName("FK__Tickets__StartSt__48CFD27E");

                    b.HasOne("MetroOne.DAL.Models.Trip", "Trip")
                        .WithMany("Tickets")
                        .HasForeignKey("TripId")
                        .IsRequired()
                        .HasConstraintName("FK__Tickets__TripID__47DBAE45");

                    b.HasOne("MetroOne.DAL.Models.User", "User")
                        .WithMany("Tickets")
                        .HasForeignKey("UserId")
                        .IsRequired()
                        .HasConstraintName("FK__Tickets__UserID__46E78A0C");

                    b.Navigation("EndStation");

                    b.Navigation("StartStation");

                    b.Navigation("Trip");

                    b.Navigation("User");
                });

            modelBuilder.Entity("MetroOne.DAL.Models.Train", b =>
                {
                    b.HasOne("MetroOne.DAL.Models.Station", "EndStation")
                        .WithMany("TrainEndStations")
                        .HasForeignKey("EndStationId")
                        .IsRequired()
                        .HasConstraintName("FK__Train__EndStatio__403A8C7D");

                    b.HasOne("MetroOne.DAL.Models.Station", "StartStation")
                        .WithMany("TrainStartStations")
                        .HasForeignKey("StartStationId")
                        .IsRequired()
                        .HasConstraintName("FK__Train__StartStat__3F466844");

                    b.Navigation("EndStation");

                    b.Navigation("StartStation");
                });

            modelBuilder.Entity("MetroOne.DAL.Models.Trip", b =>
                {
                    b.HasOne("MetroOne.DAL.Models.Train", "Train")
                        .WithMany("Trips")
                        .HasForeignKey("TrainId")
                        .IsRequired()
                        .HasConstraintName("FK__Trips__TrainID__4316F928");

                    b.Navigation("Train");
                });

            modelBuilder.Entity("MetroOne.DAL.Models.Station", b =>
                {
                    b.Navigation("TicketEndStations");

                    b.Navigation("TicketStartStations");

                    b.Navigation("TrainEndStations");

                    b.Navigation("TrainStartStations");
                });

            modelBuilder.Entity("MetroOne.DAL.Models.Ticket", b =>
                {
                    b.Navigation("PaymentStatus");
                });

            modelBuilder.Entity("MetroOne.DAL.Models.Train", b =>
                {
                    b.Navigation("Trips");
                });

            modelBuilder.Entity("MetroOne.DAL.Models.Trip", b =>
                {
                    b.Navigation("Tickets");
                });

            modelBuilder.Entity("MetroOne.DAL.Models.User", b =>
                {
                    b.Navigation("Passes");

                    b.Navigation("Tickets");
                });
#pragma warning restore 612, 618
        }
    }
}
