// <auto-generated />
using System;
using MetroOne.DAL;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace MetroOne.DAL.Migrations
{
    [DbContext(typeof(MetroonedbContext))]
    [Migration("20250428190231_update3")]
    partial class update3
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("MetroOne.DAL.Models.Location", b =>
                {
                    b.Property<int>("LocationId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("LocationID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("LocationId"));

                    b.Property<string>("LocationName")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("LocationId")
                        .HasName("PK__Location__E7FEA477A7F2D653");

                    b.ToTable("Locations");
                });

            modelBuilder.Entity("MetroOne.DAL.Models.Payment", b =>
                {
                    b.Property<int>("PaymentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PaymentId"));

                    b.Property<string>("Method")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("PaymentDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<int>("TicketId")
                        .HasColumnType("int");

                    b.HasKey("PaymentId");

                    b.HasIndex("TicketId")
                        .IsUnique();

                    b.ToTable("Payments");
                });

            modelBuilder.Entity("MetroOne.DAL.Models.Route", b =>
                {
                    b.Property<int>("RouteId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("RouteID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("RouteId"));

                    b.Property<int?>("EndStationId")
                        .HasColumnType("int")
                        .HasColumnName("EndStationID");

                    b.Property<int?>("RouteLocationId")
                        .HasColumnType("int")
                        .HasColumnName("RouteLocationID");

                    b.Property<string>("RouteName")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int?>("StartStationId")
                        .HasColumnType("int")
                        .HasColumnName("StartStationID");

                    b.HasKey("RouteId")
                        .HasName("PK__Routes__80979AAD0D2925EC");

                    b.HasIndex("EndStationId");

                    b.HasIndex("RouteLocationId");

                    b.HasIndex("StartStationId");

                    b.ToTable("Routes");
                });

            modelBuilder.Entity("MetroOne.DAL.Models.RouteLocation", b =>
                {
                    b.Property<int>("RouteLocationId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("RouteLocationID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("RouteLocationId"));

                    b.Property<int?>("LocationId")
                        .HasColumnType("int")
                        .HasColumnName("LocationID");

                    b.HasKey("RouteLocationId")
                        .HasName("PK__RouteLoc__ADC74A46D96938ED");

                    b.HasIndex(new[] { "LocationId" }, "UQ__RouteLoc__E7FEA4764EF80374")
                        .IsUnique()
                        .HasFilter("[LocationID] IS NOT NULL");

                    b.ToTable("RouteLocation", (string)null);
                });

            modelBuilder.Entity("MetroOne.DAL.Models.Station", b =>
                {
                    b.Property<int>("StationId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("StationID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("StationId"));

                    b.Property<int?>("LocationId")
                        .HasColumnType("int")
                        .HasColumnName("LocationID");

                    b.Property<string>("StationName")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("StationId")
                        .HasName("PK__Stations__E0D8A6DDF89A2067");

                    b.HasIndex("LocationId");

                    b.ToTable("Stations");
                });

            modelBuilder.Entity("MetroOne.DAL.Models.Ticket", b =>
                {
                    b.Property<int>("TicketId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("TicketID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("TicketId"));

                    b.Property<DateTime?>("BookingTime")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<decimal?>("Price")
                        .HasColumnType("decimal(10, 2)");

                    b.Property<string>("Status")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int?>("TripId")
                        .HasColumnType("int")
                        .HasColumnName("TripID");

                    b.Property<int?>("UserId")
                        .HasColumnType("int")
                        .HasColumnName("UserID");

                    b.Property<DateTime?>("ValidTo")
                        .HasColumnType("datetime");

                    b.HasKey("TicketId")
                        .HasName("PK__Tickets__712CC62751153BBF");

                    b.HasIndex("TripId");

                    b.HasIndex("UserId");

                    b.ToTable("Tickets");
                });

            modelBuilder.Entity("MetroOne.DAL.Models.Train", b =>
                {
                    b.Property<int>("TrainId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("TrainID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("TrainId"));

                    b.Property<int?>("Capacity")
                        .HasColumnType("int");

                    b.Property<TimeOnly?>("EstimatedTime")
                        .HasColumnType("time");

                    b.Property<int?>("RouteLocationId")
                        .HasColumnType("int")
                        .HasColumnName("RouteLocationID");

                    b.Property<string>("TrainName")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("TrainId")
                        .HasName("PK__Trains__8ED2725A8D149518");

                    b.HasIndex("RouteLocationId");

                    b.ToTable("Trains");
                });

            modelBuilder.Entity("MetroOne.DAL.Models.Trip", b =>
                {
                    b.Property<int>("TripId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("TripID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("TripId"));

                    b.Property<DateTime?>("ArrivalTime")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("DepartureTime")
                        .HasColumnType("datetime");

                    b.Property<int?>("RouteId")
                        .HasColumnType("int")
                        .HasColumnName("RouteID");

                    b.Property<int?>("TrainId")
                        .HasColumnType("int")
                        .HasColumnName("TrainID");

                    b.HasKey("TripId")
                        .HasName("PK__Trips__51DC711E210B0AA6");

                    b.HasIndex("RouteId");

                    b.HasIndex("TrainId");

                    b.ToTable("Trips");
                });

            modelBuilder.Entity("MetroOne.DAL.Models.User", b =>
                {
                    b.Property<int>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("UserID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("UserId"));

                    b.Property<string>("Email")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("FullName")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Password")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Permission")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasDefaultValue("Passenger");

                    b.Property<string>("Status")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasDefaultValue("Active");

                    b.HasKey("UserId")
                        .HasName("PK__Users__1788CCAC771F4B79");

                    b.HasIndex(new[] { "Email" }, "UQ__Users__A9D1053400F650C6")
                        .IsUnique()
                        .HasFilter("[Email] IS NOT NULL");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("MetroOne.DAL.Models.Payment", b =>
                {
                    b.HasOne("MetroOne.DAL.Models.Ticket", "Ticket")
                        .WithOne("Payment")
                        .HasForeignKey("MetroOne.DAL.Models.Payment", "TicketId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_Payment_Ticket");

                    b.Navigation("Ticket");
                });

            modelBuilder.Entity("MetroOne.DAL.Models.Route", b =>
                {
                    b.HasOne("MetroOne.DAL.Models.Station", "EndStation")
                        .WithMany("RouteEndStations")
                        .HasForeignKey("EndStationId")
                        .HasConstraintName("FK__Routes__EndStati__45F365D3");

                    b.HasOne("MetroOne.DAL.Models.RouteLocation", "RouteLocation")
                        .WithMany("Routes")
                        .HasForeignKey("RouteLocationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .HasConstraintName("FK__Routes__RouteLoc__46E78A0C");

                    b.HasOne("MetroOne.DAL.Models.Station", "StartStation")
                        .WithMany("RouteStartStations")
                        .HasForeignKey("StartStationId")
                        .HasConstraintName("FK__Routes__StartSta__44FF419A");

                    b.Navigation("EndStation");

                    b.Navigation("RouteLocation");

                    b.Navigation("StartStation");
                });

            modelBuilder.Entity("MetroOne.DAL.Models.RouteLocation", b =>
                {
                    b.HasOne("MetroOne.DAL.Models.Location", "Location")
                        .WithOne("RouteLocation")
                        .HasForeignKey("MetroOne.DAL.Models.RouteLocation", "LocationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .HasConstraintName("FK__RouteLoca__Locat__4222D4EF");

                    b.Navigation("Location");
                });

            modelBuilder.Entity("MetroOne.DAL.Models.Station", b =>
                {
                    b.HasOne("MetroOne.DAL.Models.Location", "Location")
                        .WithMany("Stations")
                        .HasForeignKey("LocationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .HasConstraintName("FK__Stations__Locati__3E52440B");

                    b.Navigation("Location");
                });

            modelBuilder.Entity("MetroOne.DAL.Models.Ticket", b =>
                {
                    b.HasOne("MetroOne.DAL.Models.Trip", "Trip")
                        .WithMany("Tickets")
                        .HasForeignKey("TripId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .HasConstraintName("FK__Tickets__TripID__52593CB8");

                    b.HasOne("MetroOne.DAL.Models.User", "User")
                        .WithMany("Tickets")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .HasConstraintName("FK__Tickets__UserID__5165187F");

                    b.Navigation("Trip");

                    b.Navigation("User");
                });

            modelBuilder.Entity("MetroOne.DAL.Models.Train", b =>
                {
                    b.HasOne("MetroOne.DAL.Models.RouteLocation", "RouteLocation")
                        .WithMany("Trains")
                        .HasForeignKey("RouteLocationId")
                        .OnDelete(DeleteBehavior.SetNull)
                        .HasConstraintName("FK__Trains__RouteLoc__49C3F6B7");

                    b.Navigation("RouteLocation");
                });

            modelBuilder.Entity("MetroOne.DAL.Models.Trip", b =>
                {
                    b.HasOne("MetroOne.DAL.Models.Route", "Route")
                        .WithMany("Trips")
                        .HasForeignKey("RouteId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .HasConstraintName("FK__Trips__RouteID__4CA06362");

                    b.HasOne("MetroOne.DAL.Models.Train", "Train")
                        .WithMany("Trips")
                        .HasForeignKey("TrainId")
                        .OnDelete(DeleteBehavior.SetNull)
                        .HasConstraintName("FK__Trips__TrainID__4D94879B");

                    b.Navigation("Route");

                    b.Navigation("Train");
                });

            modelBuilder.Entity("MetroOne.DAL.Models.Location", b =>
                {
                    b.Navigation("RouteLocation");

                    b.Navigation("Stations");
                });

            modelBuilder.Entity("MetroOne.DAL.Models.Route", b =>
                {
                    b.Navigation("Trips");
                });

            modelBuilder.Entity("MetroOne.DAL.Models.RouteLocation", b =>
                {
                    b.Navigation("Routes");

                    b.Navigation("Trains");
                });

            modelBuilder.Entity("MetroOne.DAL.Models.Station", b =>
                {
                    b.Navigation("RouteEndStations");

                    b.Navigation("RouteStartStations");
                });

            modelBuilder.Entity("MetroOne.DAL.Models.Ticket", b =>
                {
                    b.Navigation("Payment")
                        .IsRequired();
                });

            modelBuilder.Entity("MetroOne.DAL.Models.Train", b =>
                {
                    b.Navigation("Trips");
                });

            modelBuilder.Entity("MetroOne.DAL.Models.Trip", b =>
                {
                    b.Navigation("Tickets");
                });

            modelBuilder.Entity("MetroOne.DAL.Models.User", b =>
                {
                    b.Navigation("Tickets");
                });
#pragma warning restore 612, 618
        }
    }
}
